local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer

local currentTargetIndex = 1
local nonTeammates = {}
local switchState = 0 -- 0 for closest, 1 for second closest

-- Create a ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AdvancedPlayerHighlighterGui"
screenGui.Parent = localPlayer:WaitForChild("PlayerGui")

-- Create a main frame for the GUI
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 150)
mainFrame.Position = UDim2.new(0.5, -150, 0.9, -75)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.BackgroundTransparency = 0.2
mainFrame.Parent = screenGui

-- Create a title label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Text = "Player Targeting"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = mainFrame

-- Create a label to show the current target's name
local targetLabel = Instance.new("TextLabel")
targetLabel.Size = UDim2.new(1, 0, 0, 40)
targetLabel.Position = UDim2.new(0, 0, 0.3, 0)
targetLabel.Text = "Current Target: None"
targetLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
targetLabel.TextScaled = true
targetLabel.BackgroundTransparency = 1
targetLabel.Font = Enum.Font.Gotham
targetLabel.Parent = mainFrame

-- Create a "Switch" button with enhanced styling
local switchButton = Instance.new("TextButton")
switchButton.Size = UDim2.new(1, 0, 0.4, 0)
switchButton.Position = UDim2.new(0, 0, 0.7, 0)
switchButton.Text = "Switch Target"
switchButton.TextColor3 = Color3.fromRGB(255, 255, 255)
switchButton.TextScaled = true
switchButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
switchButton.BorderSizePixel = 0
switchButton.Font = Enum.Font.GothamBold
switchButton.Parent = mainFrame

-- Apply some animation to the button on hover
switchButton.MouseEnter:Connect(function()
    switchButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
end)
switchButton.MouseLeave:Connect(function()
    switchButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
end)

-- Function to create a BillboardGui to show the player's name and distance
local function createBillboardGui(player, adornee)
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Adornee = adornee
    billboardGui.Size = UDim2.new(0, 150, 0, 50)
    billboardGui.StudsOffset = Vector3.new(0, 2, 0)
    billboardGui.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = billboardGui
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = player.TeamColor.Color
    textLabel.TextScaled = true
    textLabel.Text = player.Name .. "\n0 Studs"

    return billboardGui, textLabel
end

-- Function to update the highlight and text color
local function updateHighlightAndTextColor(player, adornments, textLabel)
    local teamColor = player.TeamColor.Color
    for _, adornment in pairs(adornments) do
        adornment.Color3 = teamColor
    end
    textLabel.TextColor3 = teamColor
end

-- Function to highlight a player by creating a BoxHandleAdornment and BillboardGui
local function highlightPlayer(player, localPlayer)
    if player and player.Character and player ~= localPlayer then
        local character = player.Character
        local adornments = {}

        -- Create BoxHandleAdornment to outline the character parts
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                local adornment = Instance.new("BoxHandleAdornment")
                adornment.Adornee = part
                adornment.Size = part.Size
                adornment.Transparency = 0.2
                adornment.Color3 = player.TeamColor.Color
                adornment.AlwaysOnTop = true
                adornment.ZIndex = 10
                adornment.Parent = part
                table.insert(adornments, adornment)
            end
        end

        -- Create BillboardGui for the player's name and distance
        local head = character:FindFirstChild("Head")
        if head then
            local billboardGui, textLabel = createBillboardGui(player, head)
            billboardGui.Parent = head

            -- Update the distance text periodically
            RunService.RenderStepped:Connect(function()
                if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (localPlayer.Character.HumanoidRootPart.Position - head.Position).Magnitude
                    textLabel.Text = player.Name .. "\n" .. math.floor(distance) .. " Studs"
                end
            end)

            -- Update the highlight and text color when the team changes
            player:GetPropertyChangedSignal("TeamColor"):Connect(function()
                updateHighlightAndTextColor(player, adornments, textLabel)
            end)
        end
    end
end

-- Function to update the non-teammates list
local function updateNonTeammates()
    nonTeammates = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Team ~= localPlayer.Team and player.Character and player.Character:FindFirstChild("Head") then
            table.insert(nonTeammates, player)
        end
    end
    table.sort(nonTeammates, function(a, b)
        local aDistance = (localPlayer.Character.HumanoidRootPart.Position - a.Character.Head.Position).Magnitude
        local bDistance = (localPlayer.Character.HumanoidRootPart.Position - b.Character.Head.Position).Magnitude
        return aDistance < bDistance
    end)
end

-- Function to make the camera face the current target non-teammate's head
local function updateCamera()
    if not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    updateNonTeammates()

    if #nonTeammates > 0 then
        local targetPlayer = nonTeammates[currentTargetIndex]
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
            local targetPosition = targetPlayer.Character.Head.Position
            local camera = game.Workspace.CurrentCamera
            camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
            -- Update target label
            targetLabel.Text = "Current Target: " .. targetPlayer.Name
        end
    end
end

-- Function to switch the camera to the closest or second closest non-teammate
local function switchCamera()
    updateNonTeammates()
    if #nonTeammates > 1 then
        if switchState == 0 then
            currentTargetIndex = 2
            switchState = 1
        else
            currentTargetIndex = 1
            switchState = 0
        end
        updateCamera() -- Update camera when switching
    end
end

-- Connect the "Switch" button to the switchCamera function
switchButton.MouseButton1Click:Connect(switchCamera)

-- Highlight all players currently in the game except the local player
for _, player in pairs(Players:GetPlayers()) do
    highlightPlayer(player, localPlayer)
end

-- Highlight players as they join the game
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        highlightPlayer(player, localPlayer)
    end)
end)

-- Update the camera to face the current target non-teammate
RunService.RenderStepped:Connect(updateCamera)
